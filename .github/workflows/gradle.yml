# SPDX-License-Identifier: Apache-2.0

name: "Gradle"
on:
  pull_request:
    branches:
      - "main"
      - "release/**"
  push:
    branches:
      - "main"
      - "release/**"
    tags:
      - "v*"

defaults:
  run:
    shell: bash

permissions:
  contents: read

env:
  LC_ALL: C.UTF-8
  CGO_ENABLED: 1

jobs:
  build:
    name: Build
    runs-on: hiero-mirror-node-linux-large
    strategy:
      fail-fast: false
      matrix:
        project:
          - common
          - graphql
          - grpc
          - importer
          - monitor
          - rest
          - rest-java
          - "rest:check-state-proof"
          - rosetta
          - test
          - web3
        schema:
          - v1
          - v2
        exclude:
          - project: common
            schema: v2
          - project: monitor
            schema: v2
          - project: rest:check-state-proof
            schema: v2
          - project: rosetta
            schema: v2
          - project: test
            schema: v2
    timeout-minutes: 40 # increase it from 20 minutes since some jobs often run longer on self-hosted runners
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ed408507eac070d1f99cc633dbcf757c94c7933a # v4

      - name: Execute Gradle
        env:
          MIRROR_NODE_SCHEMA: ${{ matrix.schema}}
          SPRING_PROFILES_ACTIVE: ${{ matrix.schema}}
        run: ./gradlew :${{matrix.project}}:build --scan ${{ secrets.GRADLE_ARGS }}

      - name: Upload coverage report
        continue-on-error: true
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        if: ${{ matrix.schema == 'v1' && matrix.project != 'test' && always() && (github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository) }}
        run: ./gradlew :${{ matrix.project }}:uploadCoverage

      - name: Build and test web3 with modularized code
        env:
          HIERO_MIRROR_WEB3_EVM_MODULARIZEDSERVICES: "true"
          HIERO_MIRROR_WEB3_EVM_MODULARIZEDTRAFFICPERCENT: "1.0"
        if: ${{ matrix.project == 'web3' && matrix.schema == 'v1'}}
        run: ./gradlew :${{ matrix.project }}:build

  coverage:
    if: github.event_name == 'push' || (github.event.pull_request.head.repo.full_name == github.repository)
    name: Upload coverage
    needs: build
    runs-on: hiero-mirror-node-linux-large
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Finalize coverage report
        continue-on-error: true
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
