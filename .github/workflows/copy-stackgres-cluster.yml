name: Copy StackGres Citus Cluster

on:
  push:
    branches: [jtn-copy-live-env]
  workflow_dispatch:
    inputs:
      source_cluster_location:
        description: "Source: GKE location (zone or region)"
        required: true
      source_cluster_name:
        description: "Source: GKE cluster name"
        required: true
      target_cluster_location:
        description: "Target: GKE location (zone or region)"
        required: true
      target_cluster_name:
        description: "Target: GKE cluster name"
        required: true
      teardown_target:
        description: "Tear down target cluster after k6 tests run"
        required: true
        default: "true"

permissions:
  id-token: write
  contents: read

jobs:
  run-copy:
    name: Copy Citus from SOURCE âžœ TARGET
    runs-on: ubuntu-22.04
    env:
      WIF_PROVIDER: ${{ secrets.GH_ACTIONS_KUBECTL_WORKLOAD_ID_PROVIDER }}
      SA_EMAIL: ${{ secrets.GH_ACTIONS_KUBECTL_GCP_SERVICE_ACCOUNT }}
      GCP_SNAPSHOT_PROJECT: ${{ secrets.GH_ACTIONS_KUBECTL_STAGING_PROJECT_ID }}
      #GCP_SNAPSHOT_PROJECT: ${{ secrets.GH_ACTIONS_KUBECTL_MAIN_PROJECT_ID }}
      GCP_TARGET_PROJECT: ${{ secrets.GH_ACTIONS_KUBECTL_STAGING_PROJECT_ID }}
      K8S_SOURCE_CLUSTER_CONTEXT: "source_gke_context"
      K8S_TARGET_CLUSTER_CONTEXT: "target_gke_context"
      CONFIG_PATH: ${{ vars.COPY_ENV_CONFIG_PATH || '.github/workflows/copy-env2.config.json' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare kubeconfig
        shell: bash
        run: |
          echo "KUBECONFIG=$RUNNER_TEMP/kubeconfig" >> "$GITHUB_ENV"
          : > "$RUNNER_TEMP/kubeconfig"
          echo "Using KUBECONFIG=$RUNNER_TEMP/kubeconfig"

      - name: Ensure jq is available
        run: jq --version || (sudo apt-get update && sudo apt-get install -y jq)

      - name: Load config
        id: cfg
        shell: bash
        run: |
          set -euo pipefail
          test -f "$CONFIG_PATH" || { echo "Config not found: $CONFIG_PATH"; exit 1; }
          source_loc=$(jq -r '.source.location' "$CONFIG_PATH")
          source_name=$(jq -r '.source.cluster_name' "$CONFIG_PATH")
          target_loc=$(jq -r '.target.location // ""' "$CONFIG_PATH")
          target_name=$(jq -r '.target.cluster_name // ""' "$CONFIG_PATH")
          {
            echo "GCP_K8S_SOURCE_CLUSTER_REGION=$source_loc"
            echo "GCP_K8S_SOURCE_CLUSTER_NAME=$source_name"
            echo "GCP_K8S_TARGET_CLUSTER_REGION=$target_loc"
            echo "GCP_K8S_TARGET_CLUSTER_NAME=$target_name"
          } >> "$GITHUB_ENV"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.SA_EMAIL }}
          audience: "//iam.googleapis.com/${{ env.WIF_PROVIDER }}"

      - name: Setup gcloud + GKE auth plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: gke-gcloud-auth-plugin

      - name: Get GKE credentials (source)
        uses: google-github-actions/get-gke-credentials@v3
        with:
          project_id: ${{ env.GCP_SNAPSHOT_PROJECT }}
          cluster_name: ${{ env.GCP_K8S_SOURCE_CLUSTER_NAME }}
          location: ${{ env.GCP_K8S_SOURCE_CLUSTER_REGION }}

      - name: Rename source context
        shell: bash
        run: |
          set -euo pipefail
          CURR="$(kubectl config current-context)"
          kubectl config get-contexts "${{ env.K8S_SOURCE_CLUSTER_CONTEXT }}" >/dev/null 2>&1 && \
            kubectl config delete-context "${{ env.K8S_SOURCE_CLUSTER_CONTEXT }}" || true
          kubectl config rename-context "${CURR}" "${{ env.K8S_SOURCE_CLUSTER_CONTEXT }}"

      - name: Get GKE credentials (target)
        uses: google-github-actions/get-gke-credentials@v3
        with:
          project_id: ${{ env.GCP_TARGET_PROJECT }}
          cluster_name: ${{ env.GCP_K8S_TARGET_CLUSTER_NAME }}
          location: ${{ env.GCP_K8S_TARGET_CLUSTER_REGION }}

      - name: Rename target context
        shell: bash
        run: |
          set -euo pipefail
          CURR="$(kubectl config current-context)"
          kubectl config get-contexts "${{ env.K8S_TARGET_CLUSTER_CONTEXT }}" >/dev/null 2>&1 && \
            kubectl config delete-context "${{ env.K8S_TARGET_CLUSTER_CONTEXT }}" || true
          kubectl config rename-context "${CURR}" "${{ env.K8S_TARGET_CLUSTER_CONTEXT }}"

# TODO remove
      - name: Show contexts (debug)
        shell: bash
        run: |
          kubectl config get-contexts
          echo "K8S_SOURCE_CLUSTER_CONTEXT=${K8S_SOURCE_CLUSTER_CONTEXT}"
          echo "K8S_TARGET_CLUSTER_CONTEXT=${K8S_TARGET_CLUSTER_CONTEXT}"
          
          echo "Source cluster pods:"
          kubectl --context "${K8S_SOURCE_CLUSTER_CONTEXT}" get pods --all-namespaces
          echo "Target cluster pods:"
          kubectl --context "${K8S_TARGET_CLUSTER_CONTEXT}" get pods --all-namespaces

      - name: Execute copy script
        shell: bash
        env:
          AUTO_CONFIRM: "true"
          WAIT_FOR_K6: "true" #TODO make configurable

        run: |
          set -euo pipefail
          echo "Running: script to copy stackgres cluster"
          env
#          ./docs/runbook/scripts/copy-live-environment.sh

