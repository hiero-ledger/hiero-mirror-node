# SPDX-License-Identifier: Apache-2.0

name: Copy StackGres Citus Cluster

on:
  workflow_dispatch:
    inputs:
      source_cluster_location:
        description: "Source: GKE location (zone or region)"
        required: true
      source_cluster_name:
        description: "Source: GKE cluster name"
        required: true
      source_project:
        description: "Source: GCP project"
        type: choice
        options: [prod, nonprod]
        default: nonprod
        required: true
      target_cluster_location:
        description: "Target: GKE location (zone or region)"
        required: true
      target_cluster_name:
        description: "Target: GKE cluster name"
        required: true
      target_default_pool:
        description: "Target: default pool name"
        required: true
      target_project:
        description: "Target: GCP project"
        type: choice
        options: [prod, nonprod]
        default: nonprod
        required: true
      teardown_target:
        description: "Tear down target cluster after k6 tests run"
        required: true
        default: true
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  run-copy:
    name: Copy Citus from SOURCE âžœ TARGET
    runs-on: hiero-mirror-node-linux-medium
    env:
      GCP_SNAPSHOT_PROJECT: ${{ inputs.source_project == 'prod' && secrets.GH_ACTIONS_KUBECTL_MAIN_PROJECT_ID || secrets.GH_ACTIONS_KUBECTL_STAGING_PROJ
      GCP_K8S_SOURCE_CLUSTER_NAME: ${{ inputs.source_cluster_name }}
      GCP_K8S_SOURCE_CLUSTER_REGION: ${{ inputs.source_cluster_location }}
      GCP_K8S_TARGET_CLUSTER_NAME: ${{ inputs.target_cluster_name }}
      GCP_K8S_TARGET_CLUSTER_REGION: ${{ inputs.target_cluster_location }}
      GCP_TARGET_PROJECT: ${{ inputs.source_project == 'prod' && secrets.GH_ACTIONS_KUBECTL_MAIN_PROJECT_ID || secrets.GH_ACTIONS_KUBECTL_STAGING_PROJ
      K8S_SOURCE_CLUSTER_CONTEXT: "source_gke_context"
      K8S_TARGET_CLUSTER_CONTEXT: "target_gke_context"
      PINNED_KUBECONFIG: ${{ github.workspace }}/.kube/config
      SA_EMAIL: ${{ secrets.GH_ACTIONS_KUBECTL_GCP_SERVICE_ACCOUNT }}
      USE_GKE_GCLOUD_AUTH_PLUGIN: "True"
      WIF_PROVIDER: ${{ secrets.GH_ACTIONS_KUBECTL_WORKLOAD_ID_PROVIDER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure jq is available
        run: jq --version || (sudo apt-get update && sudo apt-get install -y jq)

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install ksd (Go)
        run: |
          go install github.com/mfuentesg/ksd@latest
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"
          ksd -h

      - name: Prepare pinned kubeconfig
        run: |
          mkdir -p "$(dirname "$PINNED_KUBECONFIG")"
          : > "$PINNED_KUBECONFIG"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.SA_EMAIL }}
          audience: "//iam.googleapis.com/${{ env.WIF_PROVIDER }}"

      - name: Setup gcloud + GKE auth plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: gke-gcloud-auth-plugin

      - name: Get GKE credentials (source)
        uses: google-github-actions/get-gke-credentials@v3
        with:
          cluster_name: ${{ env.GCP_K8S_SOURCE_CLUSTER_NAME }}
          context_name: ${{ env.K8S_SOURCE_CLUSTER_CONTEXT }}
          location: ${{ env.GCP_K8S_SOURCE_CLUSTER_REGION }}
          project_id: ${{ env.GCP_SNAPSHOT_PROJECT }}

      - name: Add source context to pinned kube config
        shell: bash
        run: |
          set -euo pipefail
          cp "$KUBECONFIG" "$PINNED_KUBECONFIG"
          echo "KUBECONFIG=$PINNED_KUBECONFIG" >> "$GITHUB_ENV"

      - name: Get GKE credentials (target)
        uses: google-github-actions/get-gke-credentials@v3
        with:
          cluster_name: ${{ env.GCP_K8S_TARGET_CLUSTER_NAME }}
          context_name: ${{ env.K8S_TARGET_CLUSTER_CONTEXT }}
          location: ${{ env.GCP_K8S_TARGET_CLUSTER_REGION }}
          project_id: ${{ env.GCP_TARGET_PROJECT }}

      - name: Add target context to pinned kube config
        shell: bash
        run: |
          set -euo pipefail
          test -f "$PINNED_KUBECONFIG"
          test -f "$KUBECONFIG"
          KUBECONFIG="${PINNED_KUBECONFIG}:$KUBECONFIG" \
            kubectl config view --raw --flatten > "${PINNED_KUBECONFIG}.merged"
          mv "${PINNED_KUBECONFIG}.merged" "$PINNED_KUBECONFIG"
          echo "KUBECONFIG=$PINNED_KUBECONFIG" >> "$GITHUB_ENV"

      - name: Execute copy script
        shell: bash
        env:
          AUTO_CONFIRM: "true"
          DEFAULT_POOL_NAME: ${{ inputs.target_default_pool }}
          WAIT_FOR_K6: ${{ inputs.teardown_target && 'true' || 'false' }}
        run: |
          set -Eeuo pipefail
          echo "Running: script to copy stackgres cluster"
          cd ./tools/cluster-management/
          ./copy-live-environment.sh

      - name: Cleanup pinned kubeconfig
        if: ${{ always() }}
        shell: bash
        run: |
          set -euo pipefail
          echo "KUBECONFIG=${KUBECONFIG:-<unset>}"
          echo "PINNED_KUBECONFIG=${PINNED_KUBECONFIG:-<unset>}"

          for f in "${PINNED_KUBECONFIG:-}" "${KUBECONFIG:-}"; do
            if [[ -n "$f" && -f "$f" ]]; then
              rm -f "$f"
              echo "Removed $f"
            fi
          done

          if [[ -n "${PINNED_KUBECONFIG:-}" ]]; then
            rmdir "$(dirname "$PINNED_KUBECONFIG")" 2>/dev/null || true
          fi
