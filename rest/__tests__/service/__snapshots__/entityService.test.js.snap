// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`EntityService.getAccountFromAlias tests EntityService.getAccountFromAlias - Duplicate alias 1`] = `"Multiple alive entities matching alias"`;

exports[`EntityService.getAccountIdFromAlias tests EntityService.getAccountIdFromAlias - No match - result required 1`] = `"No account with a matching alias found"`;

exports[`EntityService.getEncodedId tests EntityService.getEncodedId - Invalid alias 1`] = `
[
  "Invalid parameter: idOrAliasOrEvmAddress",
]
`;

exports[`EntityService.getEncodedId tests EntityService.getEncodedId - Non-default shard/realm 1`] = `
[
  "Invalid parameter: idOrAliasOrEvmAddress",
]
`;

exports[`EntityService.getEncodedId tests EntityService.getEncodedId - Non-default shard/realm 2`] = `
[
  "Invalid parameter: idOrAliasOrEvmAddress",
]
`;

exports[`EntityService.getEncodedId tests EntityService.getEncodedId - Non-default shard/realm 3`] = `
[
  "Invalid parameter: idOrAliasOrEvmAddress",
]
`;

exports[`EntityService.getEncodedId tests EntityService.getEncodedId - Non-default shard/realm 4`] = `
[
  "Invalid parameter: idOrAliasOrEvmAddress",
]
`;

exports[`EntityService.getEntityIdFromEvmAddress tests EntityService.getEntityIdFromEvmAddress - Multiple matches 1`] = `"Multiple alive entities matching evm address"`;

exports[`EntityService.getEntityIdFromEvmAddress tests EntityService.getEntityIdFromEvmAddress - No match - result required 1`] = `"Not found"`;
